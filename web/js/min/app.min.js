var app=angular.module("kitIoT",["ngRoute"]).config(function($routeProvider){$routeProvider.when("/",{templateUrl:"views/mainView.html",controller:"mainCtrl"}).when("/dashboard",{templateUrl:"views/dashboardView.html",controller:"dashBoardCtrl"}).when("/map",{templateUrl:"views/mapView.html",controller:"mapCtrl"}).otherwise({redirectTo:"/"})});app.run(function($rootScope,$location,Auth){$rootScope.$on("$routeChangeStart",function(){$location.path(Auth.isLoggedIn()?Auth.isLoggedIn()&&!Auth.hasLonLat()?"/map":"/dashboard":"/")}),$rootScope.$on("$routeChangeSuccess",function(){$rootScope.url=$location.path()})}),app.controller("dashBoardCtrl",function($scope,$rootScope,Storage,socket){$scope.data,$scope.connected=!1,$rootScope.name=Storage.get("name"),socket.on("data",function(m){$scope.data=m,$scope.connected=!0}),socket.on("disconnect",function(){$scope.connected=!1})}),app.controller("mainCtrl",function($scope,socket,$http,$location,Auth){$scope.loginUser=function(){$http.post("/login",{name:$scope.name,email:$scope.email,login:$scope.login,pass:$scope.pass,tel:$scope.tel}).success(function(data){data.errors?($scope.errors=data.errors,$scope.mapErrors=data.mapErrors,$scope.error=null):data.error?($scope.errors=$scope.mapErrors=$scope.error=null,$scope.error="EHOSTUNREACH"===data.error.code?{msg:"Sem conex√£o com a internet"}:data.error):data.exceptionId?($scope.errors=$scope.mapErrors=$scope.error=null,$scope.error={msg:"Erro ao autenticar o login/senha"},$scope.mapErrors={login:"Erro ao autenticar o login/senha",pass:"Erro ao autenticar o login/senha"}):($scope.errors=$scope.mapErrors=$scope.error=null,Auth.login($scope.login,$scope.name,$scope.email,$scope.tel,data["x-m2m-authtoken"],data["x-csrf-token"]),$location.path("/map"))})}}),app.controller("mapCtrl",function($scope,$location,Storage,$http){var me,map=new OpenLayers.Map("map"),campus=new OpenLayers.Layer.Image("CPBR14","img/cpbr14.png",new OpenLayers.Bounds(0,0,2022,1009),new OpenLayers.Size(1011,504),{numZoomLevels:2}),markers=new OpenLayers.Layer.Markers("Markers"),lonLat=Storage.get("lonLat");map.addLayer(markers),lonLat&&(me=new OpenLayers.Marker(OpenLayers.LonLat.fromString(lonLat)),markers.addMarker(me)),map.events.register("click",map,function(e){lonLat=map.getLonLatFromViewPortPx(e.xy),me?(markers.removeMarker(me),me.destroy(),me=new OpenLayers.Marker(lonLat),markers.addMarker(me)):(me=new OpenLayers.Marker(lonLat),markers.addMarker(me))}),map.addLayers([campus]),map.zoomToMaxExtent(),$scope.dashboard=function(){if(lonLat){var lonLatShort=lonLat.toShortString();Storage.put("lonLat",lonLatShort),$http.post("/lonLat",{userProps:Storage.getUserProps()}).success(function(){$location.path("/dashboard")})}}}),app.service("Auth",function(Storage){this.isLoggedIn=function(){return Storage.get("login")},this.hasLonLat=function(){return Storage.get("lonLat")},this.login=function(login,name,email,tel,m2mToken,csrfToken){Storage.put("login",login),Storage.put("name",name),Storage.put("email",email),Storage.put("tel",tel),Storage.put("x-m2m-authtoken",m2mToken),Storage.put("x-csrf-token",csrfToken)}}),app.factory("socket",function($rootScope){var socket=io.connect();return{on:function(eventName,callback){socket.on(eventName,function(){var args=arguments;$rootScope.$apply(function(){callback.apply(socket,args)})})},emit:function(eventName,data,callback){socket.emit(eventName,data,function(){var args=arguments;$rootScope.$apply(function(){callback&&callback.apply(socket,args)})})}}}),app.service("Storage",function(){this.put=function(name,data){localStorage.setItem(name,data)},this.get=function(name){var name=localStorage.getItem(name);return name?name:""},this.delete=function(name){localStorage.removeItem(name)},this.getUserProps=function(){var userProps={UserProps:[{name:"nome",value:this.get("name")},{name:"email",value:this.get("email")},{name:"tel",value:this.get("tel")}]};return this.get("lonLat")&&userProps.UserProps.push({name:"lonLat",value:this.get("lonLat")}),JSON.stringify(userProps)}});